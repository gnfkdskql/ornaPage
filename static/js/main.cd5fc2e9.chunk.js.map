{"version":3,"sources":["Component/Monster.js","App.js","reportWebVitals.js","index.js"],"names":["Monster","name","attack","magic","debuff","elemental","img","etc","src","process","alt","monsterList","App","state","monsters","this","setState","className","map","monster","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQA+BeA,MA5Bf,YAQI,IAPAC,EAOD,EAPCA,KACAC,EAMD,EANCA,OACAC,EAKD,EALCA,MACAC,EAID,EAJCA,OACAC,EAGD,EAHCA,UACAC,EAED,EAFCA,IACAC,EACD,EADCA,IAEA,OACI,gCACI,qBAAKC,IAAKC,YAAyBH,EAAKI,IAAI,KAC5C,6BAAKT,IACL,4DACWC,EACP,uBAFJ,6BAGWC,KAEX,4DACWC,EACP,uBAFJ,6BAGWC,KAEX,4DAAWE,SCtBjBI,EAAc,CAChB,CACIV,KAAM,2BACNC,OAAQ,EACRC,MAAO,EACPC,OAAQ,CAAC,0DACTC,UAAW,CAAC,sBACZC,IAAK,oBACLC,IAAK,IAET,CACIN,KAAM,SACNC,OAAQ,EACRC,MAAO,EACPC,OAAQ,CAAC,0DACTC,UAAW,CAAC,IACZC,IAAK,eACLC,IAAK,qDAET,CACIN,KAAM,qBACNC,OAAQ,EACRC,MAAO,EACPC,OAAQ,CAAC,4CACTC,UAAW,CAAC,sBACZC,IAAK,iBACLC,IAAK,qDAET,CACIN,KAAM,iCACNC,OAAQ,EACRC,MAAO,EACPC,OAAQ,CAAC,kGACTC,UAAW,CAAC,4DACZC,IAAK,qBACLC,IAAK,wDAET,CACIN,KAAM,iCACNC,OAAQ,EACRC,MAAO,EACPC,OAAQ,CAAC,8BACTC,UAAW,CAAC,kBACZC,IAAK,sBACLC,IAAK,uDAET,CACIN,KAAM,uCACNC,OAAQ,EACRC,MAAO,EACPC,OAAQ,CAAC,8BACTC,UAAW,CAAC,gCACZC,IAAK,2BACLC,IAAK,oCAET,CACIN,KAAM,uCACNC,OAAQ,EACRC,MAAO,EACPC,OAAQ,CAAC,oGACTC,UAAW,CAAC,wBACZC,IAAK,+BACLC,IAAK,oCAET,CACIN,KAAM,6CACNC,OAAQ,EACRC,MAAO,EACPC,OAAQ,CAAC,wEACTC,UAAW,CAAC,8BACZC,IAAK,0BACLC,IAAK,IAET,CACIN,KAAM,iCACNC,OAAQ,EACRC,MAAO,EACPC,OAAQ,CAAC,8EACTC,UAAW,CAAC,UACZC,IAAK,qBACLC,IAAK,IAET,CACIN,KAAM,qBACNC,OAAQ,EACRC,MAAO,EACPC,OAAQ,CAAC,sFACTC,UAAW,CAAC,UACZC,IAAK,iBACLC,IAAK,IAET,CACIN,KAAM,iCACNC,OAAQ,EACRC,MAAO,EACPC,OAAQ,CAAC,4CACTC,UAAW,CAAC,UACZC,IAAK,qBACLC,IAAK,KAmCEK,E,4MA9BXC,MAAQ,CACJC,SAAU,I,uDAGd,WACIC,KAAKC,SAAS,CAAEF,SAAUH,M,oBAE9B,WACI,IAAQG,EAAaC,KAAKF,MAAlBC,SACR,OACI,qBAAKG,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACKH,EAASI,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CAEIlB,KAAMkB,EAAQlB,KACdC,OAAQiB,EAAQjB,OAChBC,MAAOgB,EAAQhB,MACfC,OAAQe,EAAQf,OAChBE,IAAKa,EAAQb,IACbC,IAAKY,EAAQZ,IACbF,UAAWc,EAAQd,WAPdc,EAAQlB,iB,GAfvBmB,IAAMC,WC9FTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cd5fc2e9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Monster.css\";\r\n\r\nfunction Monster({\r\n    name,\r\n    attack,\r\n    magic,\r\n    debuff,\r\n    elemental,\r\n    img,\r\n    etc,\r\n}) {\r\n    return (\r\n        <div>\r\n            <img src={process.env.PUBLIC_URL + img} alt=\"\" />\r\n            <h1>{name}</h1>\r\n            <h2>\r\n                물리기술: {attack}\r\n                <br />\r\n                마법기술: {magic}\r\n            </h2>\r\n            <h3>\r\n                상태이상: {debuff}\r\n                <br />\r\n                공격속성: {elemental}\r\n            </h3>\r\n            <h4>특이사항: {etc}</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Monster;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Monster from \"./Component/Monster.js\";\n\nconst monsterList = [\n    {\n        name: \"스타로드\",\n        attack: 0,\n        magic: 5,\n        debuff: [\"실명, 빙결, 화상, 기절\"],\n        elemental: [\"불속성\"],\n        img: \"/img/starload.png\",\n        etc: \"\",\n    },\n    {\n        name: \"헬\",\n        attack: 8,\n        magic: 0,\n        debuff: [\"방깎, 중독, 실명, 기절\"],\n        elemental: [\"\"],\n        img: \"/img/hel.png\",\n        etc: \"디버프상태면 좆댐\",\n    },\n    {\n        name: \"수르트\",\n        attack: 6,\n        magic: 1,\n        debuff: [\"방깎, 공깎, 출혈\"],\n        elemental: [\"불속성\"],\n        img: \"/img/surtr.png\",\n        etc: \"디버프상태면 좆댐\",\n    },\n    {\n        name: \"페이게이저\",\n        attack: 1,\n        magic: 5,\n        debuff: [\"실명, 저주, 공깎, 주문깎, 방깍, 저항깎\"],\n        elemental: [\"아케인, 불, 물, 번개, 땅\"],\n        img: \"/img/fey_gazer.png\",\n        etc: \"4속성상태이상걸림!!!\",\n    },\n    {\n        name: \"페이드래곤\",\n        attack: 3,\n        magic: 3,\n        debuff: [\"역병, 화상\"],\n        elemental: [\"불, 용\"],\n        img: \"/img/fey_dragon.png\",\n        etc: \"거대한 화구 딜 조심\",\n    },\n    {\n        name: \"퍼스트호스맨\",\n        attack: 2,\n        magic: 5,\n        debuff: [\"실명, 부패\"],\n        elemental: [\"어둠, 땅, 빛\"],\n        img: \"/img/horseman_famine.png\",\n        etc: \"한방기있음!!\",\n    },\n    {\n        name: \"세컨드호스맨\",\n        attack: 0,\n        magic: 4,\n        debuff: [\"역병, 실명, 중독, 맹독, 부패, 마비, 화상\"],\n        elemental: [\"빛, 어둠\"],\n        img: \"/img/horseman_pestilence.png\",\n        etc: \"한방기있음!!\",\n    },\n    {\n        name: \"페이코카트리스\",\n        attack: 3,\n        magic: 3,\n        debuff: [\"역병, 화상, 중독, 석화, 기절\"],\n        elemental: [\"드래곤, 불\"],\n        img: \"/img/fey_cockatrice.png\",\n        etc: \"\",\n    },\n    {\n        name: \"이그드라실\",\n        attack: 3,\n        magic: 4,\n        debuff: [\"공깎, 방깎, 저항깎, 석화, 기절\"],\n        elemental: [\"땅\"],\n        img: \"/img/yggdrasil.png\",\n        etc: \"\",\n    },\n    {\n        name: \"타이탄\",\n        attack: 2,\n        magic: 2,\n        debuff: [\"부패, 방깎, 석화, 빙결, 수면, 기절\"],\n        elemental: [\"땅\"],\n        img: \"/img/titan.png\",\n        etc: \"\",\n    },\n    {\n        name: \"발러엘리트\",\n        attack: 2,\n        magic: 1,\n        debuff: [\"실명, 역병, 방깎\"],\n        elemental: [\"불\"],\n        img: \"/img/yggdrasil.png\",\n        etc: \"\",\n    },\n];\n\nclass App extends React.Component {\n    state = {\n        monsters: [],\n    };\n\n    componentDidMount() {\n        this.setState({ monsters: monsterList });\n    }\n    render() {\n        const { monsters } = this.state;\n        return (\n            <div className=\"App\">\n                <div className=\"monsters\">\n                    {monsters.map((monster) => (\n                        <Monster\n                            key={monster.name}\n                            name={monster.name}\n                            attack={monster.attack}\n                            magic={monster.magic}\n                            debuff={monster.debuff}\n                            img={monster.img}\n                            etc={monster.etc}\n                            elemental={monster.elemental}\n                        />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}